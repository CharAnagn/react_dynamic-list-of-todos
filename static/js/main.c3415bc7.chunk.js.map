{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","App.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","onShow","isShlashedEye","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","inputValue","onUserInput","onUserSelect","onChange","event","target","value","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","statusText","json","SelectOption","Loader","TodoModal","onExit","useState","user","setUser","loadUser","a","userId","loadedUser","useEffect","href","email","name","App","setTodos","query","setQuery","selectFilter","setSelectFilter","selectedTodo","setSelectedTodo","filteredTodos","filter","toLowerCase","includes","All","Active","Completed","loadTodos","loadedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3415bc7.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onShow: (todo: Todo) => void,\n  isShlashedEye: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, onShow, isShlashedEye }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <span className=\"icon\" data-cy=\"iconCompleted\">\n              <i className=\"fas fa-check\" />\n            </span>\n          ) : (<td className=\"is-vcentered\" />)}\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={cn({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onShow(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={cn('far',\n                  {\n                    'fa-eye': isShlashedEye === null,\n                    'fa-eye-slash': isShlashedEye !== null,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  inputValue: string,\n  onUserInput: (arg: string) => void,\n  onUserSelect: (arg: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  inputValue,\n  onUserInput,\n  onUserSelect,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            onUserSelect(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        value={inputValue}\n        placeholder=\"Search...\"\n        onChange={(event) => {\n          onUserInput(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {inputValue.length > 0 && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              onUserInput('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum SelectOption {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectFilter, setSelectFilter] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  let filteredTodos = [...todos];\n\n  if (query) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title\n        .toLowerCase().includes(query.toLowerCase()));\n  }\n\n  switch (selectFilter) {\n    case SelectOption.All:\n      break;\n    case SelectOption.Active:\n      filteredTodos = filteredTodos.filter(todo => todo.completed === false);\n      break;\n    case SelectOption.Completed:\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      break;\n  }\n\n  const loadTodos = async () => {\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                inputValue={query}\n                onUserInput={setQuery}\n                onUserSelect={setSelectFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    onShow={setSelectedTodo}\n                    isShlashedEye={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} onExit={setSelectedTodo} /> }\n    </>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onExit: (todo:Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onExit }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    const loadedUser = await getUser(todo.userId);\n\n    setUser(loadedUser);\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onExit(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}